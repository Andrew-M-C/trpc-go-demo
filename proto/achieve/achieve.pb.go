// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.3
// 	protoc        v5.27.3
// source: achieve.proto

package achieve

import (
	reflect "reflect"
	sync "sync"

	common "github.com/Andrew-M-C/trpc-go-demo/proto/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetUserReputationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Metadata      *common.Metadata       `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserReputationRequest) Reset() {
	*x = GetUserReputationRequest{}
	mi := &file_achieve_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserReputationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserReputationRequest) ProtoMessage() {}

func (x *GetUserReputationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_achieve_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserReputationRequest.ProtoReflect.Descriptor instead.
func (*GetUserReputationRequest) Descriptor() ([]byte, []int) {
	return file_achieve_proto_rawDescGZIP(), []int{0}
}

func (x *GetUserReputationRequest) GetMetadata() *common.Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *GetUserReputationRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetUserReputationResponse struct {
	state         protoimpl.MessageState          `protogen:"open.v1"`
	ErrCode       int32                           `protobuf:"varint,1,opt,name=err_code,json=errCode,proto3" json:"err_code"`
	ErrMsg        string                          `protobuf:"bytes,2,opt,name=err_msg,json=errMsg,proto3" json:"err_msg,omitempty"`
	Data          *GetUserReputationResponse_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserReputationResponse) Reset() {
	*x = GetUserReputationResponse{}
	mi := &file_achieve_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserReputationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserReputationResponse) ProtoMessage() {}

func (x *GetUserReputationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_achieve_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserReputationResponse.ProtoReflect.Descriptor instead.
func (*GetUserReputationResponse) Descriptor() ([]byte, []int) {
	return file_achieve_proto_rawDescGZIP(), []int{1}
}

func (x *GetUserReputationResponse) GetErrCode() int32 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *GetUserReputationResponse) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

func (x *GetUserReputationResponse) GetData() *GetUserReputationResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type Reputation struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ExpPoints     uint32                 `protobuf:"varint,1,opt,name=exp_points,json=expPoints,proto3" json:"exp_points,omitempty"` // 经验积分
	Rank          uint32                 `protobuf:"varint,2,opt,name=rank,proto3" json:"rank,omitempty"`                            // 等级
	RankName      string                 `protobuf:"bytes,3,opt,name=rank_name,json=rankName,proto3" json:"rank_name,omitempty"`     // 等级描述
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Reputation) Reset() {
	*x = Reputation{}
	mi := &file_achieve_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Reputation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Reputation) ProtoMessage() {}

func (x *Reputation) ProtoReflect() protoreflect.Message {
	mi := &file_achieve_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Reputation.ProtoReflect.Descriptor instead.
func (*Reputation) Descriptor() ([]byte, []int) {
	return file_achieve_proto_rawDescGZIP(), []int{2}
}

func (x *Reputation) GetExpPoints() uint32 {
	if x != nil {
		return x.ExpPoints
	}
	return 0
}

func (x *Reputation) GetRank() uint32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *Reputation) GetRankName() string {
	if x != nil {
		return x.RankName
	}
	return ""
}

type GetUserBadgesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Metadata      *common.Metadata       `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserBadgesRequest) Reset() {
	*x = GetUserBadgesRequest{}
	mi := &file_achieve_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserBadgesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserBadgesRequest) ProtoMessage() {}

func (x *GetUserBadgesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_achieve_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserBadgesRequest.ProtoReflect.Descriptor instead.
func (*GetUserBadgesRequest) Descriptor() ([]byte, []int) {
	return file_achieve_proto_rawDescGZIP(), []int{3}
}

func (x *GetUserBadgesRequest) GetMetadata() *common.Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *GetUserBadgesRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetUserBadgesResponse struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	ErrCode       int32                       `protobuf:"varint,1,opt,name=err_code,json=errCode,proto3" json:"err_code"`
	ErrMsg        string                      `protobuf:"bytes,2,opt,name=err_msg,json=errMsg,proto3" json:"err_msg,omitempty"`
	Data          *GetUserBadgesResponse_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserBadgesResponse) Reset() {
	*x = GetUserBadgesResponse{}
	mi := &file_achieve_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserBadgesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserBadgesResponse) ProtoMessage() {}

func (x *GetUserBadgesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_achieve_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserBadgesResponse.ProtoReflect.Descriptor instead.
func (*GetUserBadgesResponse) Descriptor() ([]byte, []int) {
	return file_achieve_proto_rawDescGZIP(), []int{4}
}

func (x *GetUserBadgesResponse) GetErrCode() int32 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *GetUserBadgesResponse) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

func (x *GetUserBadgesResponse) GetData() *GetUserBadgesResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type Badge struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Name              string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                                                         // 徽章名称
	Count             uint32                 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`                                                      // 徽章个数
	FirstAcquireTsSec int64                  `protobuf:"varint,3,opt,name=first_acquire_ts_sec,json=firstAcquireTsSec,proto3" json:"first_acquire_ts_sec,omitempty"` // 首次获得时间
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Badge) Reset() {
	*x = Badge{}
	mi := &file_achieve_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Badge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Badge) ProtoMessage() {}

func (x *Badge) ProtoReflect() protoreflect.Message {
	mi := &file_achieve_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Badge.ProtoReflect.Descriptor instead.
func (*Badge) Descriptor() ([]byte, []int) {
	return file_achieve_proto_rawDescGZIP(), []int{5}
}

func (x *Badge) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Badge) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *Badge) GetFirstAcquireTsSec() int64 {
	if x != nil {
		return x.FirstAcquireTsSec
	}
	return 0
}

type GetUserReputationResponse_Data struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Reputation    *Reputation            `protobuf:"bytes,1,opt,name=reputation,proto3" json:"reputation,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserReputationResponse_Data) Reset() {
	*x = GetUserReputationResponse_Data{}
	mi := &file_achieve_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserReputationResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserReputationResponse_Data) ProtoMessage() {}

func (x *GetUserReputationResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_achieve_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserReputationResponse_Data.ProtoReflect.Descriptor instead.
func (*GetUserReputationResponse_Data) Descriptor() ([]byte, []int) {
	return file_achieve_proto_rawDescGZIP(), []int{1, 0}
}

func (x *GetUserReputationResponse_Data) GetReputation() *Reputation {
	if x != nil {
		return x.Reputation
	}
	return nil
}

type GetUserBadgesResponse_Data struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Badges        []*Badge               `protobuf:"bytes,1,rep,name=badges,proto3" json:"badges,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserBadgesResponse_Data) Reset() {
	*x = GetUserBadgesResponse_Data{}
	mi := &file_achieve_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserBadgesResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserBadgesResponse_Data) ProtoMessage() {}

func (x *GetUserBadgesResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_achieve_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserBadgesResponse_Data.ProtoReflect.Descriptor instead.
func (*GetUserBadgesResponse_Data) Descriptor() ([]byte, []int) {
	return file_achieve_proto_rawDescGZIP(), []int{4, 0}
}

func (x *GetUserBadgesResponse_Data) GetBadges() []*Badge {
	if x != nil {
		return x.Badges
	}
	return nil
}

var File_achieve_proto protoreflect.FileDescriptor

var file_achieve_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x11, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x61, 0x63, 0x68, 0x69, 0x65,
	0x76, 0x65, 0x1a, 0x15, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x6b, 0x0a, 0x18, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x64,
	0x65, 0x6d, 0x6f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xdd, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x70, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x72, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x17, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x12, 0x45, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x64, 0x65,
	0x6d, 0x6f, 0x2e, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x70, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a,
	0x45, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x3d, 0x0a, 0x0a, 0x72, 0x65, 0x70, 0x75, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x74, 0x72,
	0x70, 0x63, 0x2e, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x2e,
	0x52, 0x65, 0x70, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x72, 0x65, 0x70, 0x75,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x5c, 0x0a, 0x0a, 0x52, 0x65, 0x70, 0x75, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x5f, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x65, 0x78, 0x70, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x61, 0x6e, 0x6b, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x61, 0x6e, 0x6b,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0x67, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42,
	0x61, 0x64, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x08,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xc8, 0x01,
	0x0a, 0x15, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x64, 0x67, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x72, 0x72, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x12, 0x41, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x74, 0x72, 0x70, 0x63,
	0x2e, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x64, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x38,
	0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x30, 0x0a, 0x06, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x64, 0x65,
	0x6d, 0x6f, 0x2e, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x2e, 0x42, 0x61, 0x64, 0x67, 0x65,
	0x52, 0x06, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x22, 0x62, 0x0a, 0x05, 0x42, 0x61, 0x64, 0x67,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2f, 0x0a, 0x14, 0x66,
	0x69, 0x72, 0x73, 0x74, 0x5f, 0x61, 0x63, 0x71, 0x75, 0x69, 0x72, 0x65, 0x5f, 0x74, 0x73, 0x5f,
	0x73, 0x65, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x66, 0x69, 0x72, 0x73, 0x74,
	0x41, 0x63, 0x71, 0x75, 0x69, 0x72, 0x65, 0x54, 0x73, 0x53, 0x65, 0x63, 0x32, 0xe1, 0x01, 0x0a,
	0x0b, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x6e, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x2b, 0x2e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x61, 0x63,
	0x68, 0x69, 0x65, 0x76, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70,
	0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c,
	0x2e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x61, 0x63, 0x68, 0x69, 0x65,
	0x76, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x75, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x62, 0x0a, 0x0d,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x64, 0x67, 0x65, 0x73, 0x12, 0x27, 0x2e,
	0x74, 0x72, 0x70, 0x63, 0x2e, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76,
	0x65, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x64, 0x67, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x64, 0x65,
	0x6d, 0x6f, 0x2e, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x42, 0x61, 0x64, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x42, 0x32, 0x5a, 0x30, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x41,
	0x6e, 0x64, 0x72, 0x65, 0x77, 0x2d, 0x4d, 0x2d, 0x43, 0x2f, 0x74, 0x72, 0x70, 0x63, 0x2d, 0x67,
	0x6f, 0x2d, 0x64, 0x65, 0x6d, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x63, 0x68,
	0x69, 0x65, 0x76, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_achieve_proto_rawDescOnce sync.Once
	file_achieve_proto_rawDescData = file_achieve_proto_rawDesc
)

func file_achieve_proto_rawDescGZIP() []byte {
	file_achieve_proto_rawDescOnce.Do(func() {
		file_achieve_proto_rawDescData = protoimpl.X.CompressGZIP(file_achieve_proto_rawDescData)
	})
	return file_achieve_proto_rawDescData
}

var file_achieve_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_achieve_proto_goTypes = []any{
	(*GetUserReputationRequest)(nil),       // 0: trpc.demo.achieve.GetUserReputationRequest
	(*GetUserReputationResponse)(nil),      // 1: trpc.demo.achieve.GetUserReputationResponse
	(*Reputation)(nil),                     // 2: trpc.demo.achieve.Reputation
	(*GetUserBadgesRequest)(nil),           // 3: trpc.demo.achieve.GetUserBadgesRequest
	(*GetUserBadgesResponse)(nil),          // 4: trpc.demo.achieve.GetUserBadgesResponse
	(*Badge)(nil),                          // 5: trpc.demo.achieve.Badge
	(*GetUserReputationResponse_Data)(nil), // 6: trpc.demo.achieve.GetUserReputationResponse.Data
	(*GetUserBadgesResponse_Data)(nil),     // 7: trpc.demo.achieve.GetUserBadgesResponse.Data
	(*common.Metadata)(nil),                // 8: trpc.demo.common.Metadata
}
var file_achieve_proto_depIdxs = []int32{
	8, // 0: trpc.demo.achieve.GetUserReputationRequest.metadata:type_name -> trpc.demo.common.Metadata
	6, // 1: trpc.demo.achieve.GetUserReputationResponse.data:type_name -> trpc.demo.achieve.GetUserReputationResponse.Data
	8, // 2: trpc.demo.achieve.GetUserBadgesRequest.metadata:type_name -> trpc.demo.common.Metadata
	7, // 3: trpc.demo.achieve.GetUserBadgesResponse.data:type_name -> trpc.demo.achieve.GetUserBadgesResponse.Data
	2, // 4: trpc.demo.achieve.GetUserReputationResponse.Data.reputation:type_name -> trpc.demo.achieve.Reputation
	5, // 5: trpc.demo.achieve.GetUserBadgesResponse.Data.badges:type_name -> trpc.demo.achieve.Badge
	0, // 6: trpc.demo.achieve.Achievement.GetUserReputation:input_type -> trpc.demo.achieve.GetUserReputationRequest
	3, // 7: trpc.demo.achieve.Achievement.GetUserBadges:input_type -> trpc.demo.achieve.GetUserBadgesRequest
	1, // 8: trpc.demo.achieve.Achievement.GetUserReputation:output_type -> trpc.demo.achieve.GetUserReputationResponse
	4, // 9: trpc.demo.achieve.Achievement.GetUserBadges:output_type -> trpc.demo.achieve.GetUserBadgesResponse
	8, // [8:10] is the sub-list for method output_type
	6, // [6:8] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_achieve_proto_init() }
func file_achieve_proto_init() {
	if File_achieve_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_achieve_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_achieve_proto_goTypes,
		DependencyIndexes: file_achieve_proto_depIdxs,
		MessageInfos:      file_achieve_proto_msgTypes,
	}.Build()
	File_achieve_proto = out.File
	file_achieve_proto_rawDesc = nil
	file_achieve_proto_goTypes = nil
	file_achieve_proto_depIdxs = nil
}
