syntax = "proto3";
package trpc.demo.httpauth;

option go_package = "github.com/Andrew-M-C/trpc-go-demo/proto/httpauth";

import "common/metadata.proto";
import "achieve/achieve.proto";

// Auth 提供 HTTP 认证接口
service Auth {
    rpc Login(LoginRequest) returns (LoginResponse); // @alias=/demo/auth/Login
    rpc Synchronize(SynchronizeRequest) returns (SynchronizeResponse); // @alias=/demo/auth/Synchronize
    rpc UserSpace(UserSpaceRequest) returns (UserSpaceResponse); // @alias=/demo/auth/UserSpace
}

message LoginRequest {
    common.Metadata metadata = 1;
    string username      = 2;
    string password_hash = 3;
}

message LoginResponse {
    int32  err_code = 1;
    string err_msg  = 2;
    Data   data     = 3;

    message Data {
        string id_ticket = 1;
    }
}

message SynchronizeRequest {
    common.Metadata metadata = 1;
}

message SynchronizeResponse {
    int32  err_code = 1;
    string err_msg  = 2;
    Data   data     = 3;

    message Data {
        int64  ts_msec  = 1; // 毫秒级时间戳
        string desc     = 2; // 时间可视化描述
        string timezone = 3; // 时区
    }
}

message UserSpaceRequest {
    common.Metadata metadata = 1;
    string username = 2;
}

message UserSpaceResponse {
    int32  err_code = 1;
    string err_msg  = 2;
    Data   data     = 3;

    message Data {
        UserInfo user_info = 1;
        achieve.Reputation reputation = 2;
        repeated achieve.Badge badges = 3;
    }

    message UserInfo {
        string user_id  = 1;
        string username = 2;
        string nickname = 3;
        int64  create_ts_sec = 4;
    }
}